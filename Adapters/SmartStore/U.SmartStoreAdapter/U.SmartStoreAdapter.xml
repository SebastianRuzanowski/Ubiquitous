<?xml version="1.0"?>
<doc>
    <assembly>
        <name>U.SmartStoreAdapter</name>
    </assembly>
    <members>
        <member name="T:U.SmartStoreAdapter.Controllers.CategoriesController">
            <summary>
            
            </summary>
        </member>
        <member name="M:U.SmartStoreAdapter.Controllers.CategoriesController.#ctor(MediatR.IMediator)">
            <summary>
            Store Categories
            </summary>
            <param name="mediator"></param>
        </member>
        <member name="M:U.SmartStoreAdapter.Controllers.CategoriesController.StoreCategory(U.SmartStoreAdapter.Api.Categories.StoreCategoryCommand)">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:U.SmartStoreAdapter.Controllers.CategoriesController.GetCategories(U.SmartStoreAdapter.Api.Categories.GetCategoriesQuery)">
            <summary>
            Get Categories
            </summary>
            <returns></returns>
        </member>
        <member name="T:U.SmartStoreAdapter.Controllers.HealthController">
            <summary>
            
            </summary>
        </member>
        <member name="M:U.SmartStoreAdapter.Controllers.HealthController.HealthCheck">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:U.SmartStoreAdapter.Controllers.ManufacturersController">
            <summary>
            
            </summary>
        </member>
        <member name="M:U.SmartStoreAdapter.Controllers.ManufacturersController.#ctor(MediatR.IMediator,Microsoft.Extensions.Logging.ILogger{U.SmartStoreAdapter.Controllers.ManufacturersController})">
            <summary>
            
            </summary>
            <param name="mediator"></param>
            <param name="logger"></param>
        </member>
        <member name="M:U.SmartStoreAdapter.Controllers.ManufacturersController.Store(U.SmartStoreAdapter.Api.Manufacturers.StoreManufacturerCommand)">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:U.SmartStoreAdapter.Controllers.PicturesController">
            <summary>
            
            </summary>
        </member>
        <member name="M:U.SmartStoreAdapter.Controllers.PicturesController.#ctor(MediatR.IMediator)">
            <summary>
            
            </summary>
            <param name="mediator"></param>
        </member>
        <member name="M:U.SmartStoreAdapter.Controllers.PicturesController.StorePicture(U.SmartStoreAdapter.Api.Pictures.StorePicturesCommand)">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:U.SmartStoreAdapter.Controllers.ProductsController">
            <summary>
            
            </summary>
        </member>
        <member name="M:U.SmartStoreAdapter.Controllers.ProductsController.#ctor(MediatR.IMediator)">
            <summary>
            
            </summary>
            <param name="mediator"></param>
        </member>
        <member name="M:U.SmartStoreAdapter.Controllers.ProductsController.GetProductsList(U.SmartStoreAdapter.Api.Products.GetProductsListQuery)">
            <summary>
            Get list of products 
            </summary>
            <param name="productsListQuery"></param>
            <returns></returns>
        </member>
        <member name="M:U.SmartStoreAdapter.Controllers.ProductsController.GetProduct(U.SmartStoreAdapter.Api.Products.GetProductQuery)">
            <summary>
            Get product by its id or systemName
            </summary>
            <param name="productQuery"></param>
            <returns></returns>
        </member>
        <member name="M:U.SmartStoreAdapter.Controllers.ProductsController.StoreProducts(U.SmartStoreAdapter.Api.Products.StoreProductsCommand)">
            <summary>
            Add or update Product
            </summary>
            <param name="products"></param>
            <returns></returns>
        </member>
        <member name="T:U.SmartStoreAdapter.Controllers.TaxCategoryController">
            <summary>
            Tax Category
            </summary>
        </member>
        <member name="M:U.SmartStoreAdapter.Controllers.TaxCategoryController.#ctor(MediatR.IMediator)">
            <summary>
            
            </summary>
            <param name="mediator"></param>
        </member>
        <member name="M:U.SmartStoreAdapter.Controllers.TaxCategoryController.StoreTaxCategory(U.SmartStoreAdapter.Api.Products.StoreTaxCategoryCommand)">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:U.SmartStoreAdapter.Extensions.HttpExtensions">
            <summary>
            
            </summary>
        </member>
        <member name="M:U.SmartStoreAdapter.Extensions.HttpExtensions.WriteJson``1(Microsoft.AspNetCore.Http.HttpResponse,``0,System.String)">
            <summary>
            
            </summary>
            <param name="response"></param>
            <param name="obj"></param>
            <param name="contentType"></param>
            <typeparam name="T"></typeparam>
        </member>
        <member name="T:U.SmartStoreAdapter.Middleware.ExceptionMiddleware">
            <summary>
            Exception Middleware that catches all exceptions
            </summary>
        </member>
        <member name="M:U.SmartStoreAdapter.Middleware.ExceptionMiddleware.AddExceptionMiddleWare(Microsoft.AspNetCore.Builder.IApplicationBuilder)">
            <summary>
            
            </summary>
            <param name="app"></param>
        </member>
        <member name="T:U.SmartStoreAdapter.Program">
            <summary>
            
            </summary>
        </member>
        <member name="M:U.SmartStoreAdapter.Program.Main(System.String[])">
            <summary>
            
            </summary>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="T:U.SmartStoreAdapter.Startup">
            <summary>
            
            </summary>
        </member>
        <member name="M:U.SmartStoreAdapter.Startup.#ctor(Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            
            </summary>
            <param name="configuration"></param>
        </member>
        <member name="P:U.SmartStoreAdapter.Startup.Configuration">
            <summary>
            
            </summary>
        </member>
        <member name="M:U.SmartStoreAdapter.Startup.ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            This method gets called by the runtime. Use this method to add services to the container.
        </member>
        <member name="M:U.SmartStoreAdapter.Startup.Configure(Microsoft.AspNetCore.Builder.IApplicationBuilder,Microsoft.AspNetCore.Hosting.IHostingEnvironment,Microsoft.AspNetCore.Hosting.IApplicationLifetime,Consul.IConsulClient)">
            This method gets called by the runtime. Use this method to configure the HTTP transaction pipeline.
        </member>
    </members>
</doc>
