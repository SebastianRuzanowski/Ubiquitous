// <auto-generated />

using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using U.FetchService.Infrastructure.Context;

namespace U.FetchService.Infrastructure.Migrations
{
    [DbContext(typeof(FetchServiceContext))]
    partial class FetchServiceContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.2.0-rtm-35687")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("U.FetchService.Domain.Entities.BatchTransaction", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("ItemsCount");

                    b.HasKey("Id");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("U.FetchService.Domain.Entities.BatchTransaction", b =>
                {
                    b.OwnsOne("U.FetchService.Domain.Entities.Executed", "Executed", b1 =>
                        {
                            b1.Property<Guid>("BatchTransactionId");

                            b1.Property<DateTime>("At");

                            b1.Property<string>("By");

                            b1.Property<string>("ExecutorComment");

                            b1.HasKey("BatchTransactionId");

                            b1.ToTable("Transactions");

                            b1.HasOne("U.FetchService.Domain.Entities.BatchTransaction")
                                .WithOne("Executed")
                                .HasForeignKey("U.FetchService.Domain.Entities.Executed", "BatchTransactionId")
                                .OnDelete(DeleteBehavior.Cascade);
                        });

                    b.OwnsOne("U.FetchService.Domain.Entities.Party", "From", b1 =>
                        {
                            b1.Property<Guid>("BatchTransactionId");

                            b1.Property<string>("Ip");

                            b1.Property<string>("Name");

                            b1.Property<int>("Port");

                            b1.Property<string>("Protocol");

                            b1.HasKey("BatchTransactionId");

                            b1.ToTable("Transactions");

                            b1.HasOne("U.FetchService.Domain.Entities.BatchTransaction")
                                .WithOne("From")
                                .HasForeignKey("U.FetchService.Domain.Entities.Party", "BatchTransactionId")
                                .OnDelete(DeleteBehavior.Cascade);
                        });

                    b.OwnsOne("U.FetchService.Domain.Entities.Party", "To", b1 =>
                        {
                            b1.Property<Guid>("BatchTransactionId");

                            b1.Property<string>("Ip");

                            b1.Property<string>("Name");

                            b1.Property<int>("Port");

                            b1.Property<string>("Protocol");

                            b1.HasKey("BatchTransactionId");

                            b1.ToTable("Transactions");

                            b1.HasOne("U.FetchService.Domain.Entities.BatchTransaction")
                                .WithOne("To")
                                .HasForeignKey("U.FetchService.Domain.Entities.Party", "BatchTransactionId")
                                .OnDelete(DeleteBehavior.Cascade);
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
