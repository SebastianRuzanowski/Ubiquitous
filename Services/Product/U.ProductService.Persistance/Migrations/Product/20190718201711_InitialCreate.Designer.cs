// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using U.ProductService.Persistance;
using U.ProductService.Persistance.Contexts;

namespace U.ProductService.Persistance.Migrations.Product
{
    [DbContext(typeof(ProductContext))]
    [Migration("20190718201711_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.2.0-rtm-35687")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("U.ProductService.Domain.AggregatesModel.OrderAggregate.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("BuyerId");

                    b.Property<bool>("IsDraft");

                    b.Property<Guid>("ManufacturerId");

                    b.Property<DateTime>("ProductDueDate");

                    b.HasKey("Id");

                    b.ToTable("Products","product");
                });

            modelBuilder.Entity("U.ProductService.Domain.AggregatesModel.OrderAggregate.Product", b =>
                {
                    b.OwnsOne("U.ProductService.Domain.AggregatesModel.OrderAggregate.Address", "Address", b1 =>
                        {
                            b1.Property<Guid>("ProductId");

                            b1.Property<string>("City");

                            b1.Property<string>("Country");

                            b1.Property<string>("State");

                            b1.Property<string>("Street");

                            b1.Property<string>("ZipCode");

                            b1.HasKey("ProductId");

                            b1.ToTable("Products","product");

                            b1.HasOne("U.ProductService.Domain.AggregatesModel.OrderAggregate.Product")
                                .WithOne("Address")
                                .HasForeignKey("U.ProductService.Domain.AggregatesModel.OrderAggregate.Address", "ProductId")
                                .OnDelete(DeleteBehavior.Cascade);
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
