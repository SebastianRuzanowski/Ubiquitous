version: '3.5'

services:
  elasticsearch:
    container_name: elasticsearch
    build:
      context: elasticsearch/
      args:
        ELK_VERSION: $ELK_VERSION
    volumes:
      - type: bind
        source: ./elasticsearch/config/elasticsearch.yml
        target: /usr/share/elasticsearch/config/elasticsearch.yml
        read_only: true
      - type: volume
        source: elasticsearch
        target: /usr/share/elasticsearch/data
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      ES_JAVA_OPTS: "-Xmx256m -Xms256m"
      ELASTIC_PASSWORD: changeme
      # Use single node discovery in order to disable production mode and avoid bootstrap checks
      # see https://www.elastic.co/guide/en/elasticsearch/reference/current/bootstrap-checks.html
      discovery.type: single-node
    networks:
      - ubiquitous

  logstash:
    container_name: logstash
    build:
      context: logstash/
      args:
        ELK_VERSION: $ELK_VERSION
    volumes:
      - type: bind
        source: ./logstash/config/logstash.yml
        target: /usr/share/logstash/config/logstash.yml
        read_only: true
      - type: bind
        source: ./logstash/pipeline
        target: /usr/share/logstash/pipeline
        read_only: true
    ports:
      - "7000:7000/tcp"
      - "7000:7000/udp"
      - "9600:9600"
    environment:
      LS_JAVA_OPTS: "-Xmx256m -Xms256m"
    networks:
      - ubiquitous
    depends_on:
      - elasticsearch

  kibana:
    container_name: kibana
    build:
      context: kibana/
      args:
        ELK_VERSION: $ELK_VERSION
    volumes:
      - type: bind
        source: ./kibana/config/kibana.yml
        target: /usr/share/kibana/config/kibana.yml
        read_only: true
    ports:
      - "5601:5601"
    networks:
      - ubiquitous
    depends_on:
      - elasticsearch

  jaeger-collector:
    container_name: jaeger-collector
    image: jaegertracing/jaeger-collector
    ports:
      - "14269:14269"
      - "14268:14268"
      - "14267:14267"
      - "9411:9411"
    networks:
      - ubiquitous
    restart: unless-stopped
    environment:
      - SPAN_STORAGE_TYPE=elasticsearch
    command: ["--span-storage.type=elasticsearch", "--es.server-urls=http://elasticsearch:9200", "--es.username=elastic", "--es.password=changeme", "--es.tags-as-fields.all=true", "--es.num-shards=1",  "--log-level=error" ]
    depends_on:
      - elasticsearch
    links:
      - elasticsearch

  jaeger-agent:
    container_name: jaeger-agent
    hostname: jaeger-agent
    image: jaegertracing/jaeger-agent
    command: ["--collector.host-port=jaeger-collector:14267" ]
    ports:
      - "5775:5775/udp"
      - "6831:6831/udp"
      - "6832:6832/udp"
      - "5778:5778"
    networks:
      - ubiquitous
    restart: unless-stopped
    environment:
      - SPAN_STORAGE_TYPE=elasticsearch
    depends_on:
      - jaeger-collector
      - elasticsearch
    links:
      - jaeger-collector
      - elasticsearch

  jaeger-query:
    container_name: jaeger-query
    hostname: jaeger-query
    image: jaegertracing/jaeger-query
    environment:
      - SPAN_STORAGE_TYPE=elasticsearch
    ports:
      - "16686:16686"
      - "16687:16687"
    networks:
      - ubiquitous
    restart: unless-stopped
    command: ["--span-storage.type=elasticsearch", "--es.server-urls=http://elasticsearch:9200", "--es.username=elastic", "--es.password=changeme", "--es.sniffer=false", "--log-level=debug"]
    depends_on:
      - jaeger-agent
      - elasticsearch
    links:
      - jaeger-agent
      - elasticsearch

networks:
  ubiquitous:
    driver: bridge
    name: ubiquitous
    external: true

volumes:
  elasticsearch:
  jaeger-query:
  jaeger-agent:
  jaeger-collector: