version: "3.5"

services:

  postgres:
    container_name: postgres
    image: postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      PGDATA: /data/postgres
    volumes:
       - postgres:/data/postgres
    ports:
      - 5433:5432
    networks:
      - ubiquitous
    restart: unless-stopped

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@ubiquitous.com
      PGADMIN_DEFAULT_PASSWORD: admin
    depends_on:
    - postgres
    volumes:
       - pgadmin:/root/.pgadmin
    ports:
      - 5450:80
    networks:
      - ubiquitous
    restart: unless-stopped

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - 5672:5672
      - 15672:15672
    volumes:
      - rabbitmq:/var/lib/rabbitmq
    networks:
      - ubiquitous
    restart: unless-stopped

  redis:
    image: redis
    container_name: redis
    ports:
      - 6379:6379
    command: ["redis-server", "--bind", "redis", "--port", "6379"]
    volumes:
      - redis:/data
    restart: unless-stopped
    networks:
      - ubiquitous

  consul:
    image: consul
    container_name: consul
    ports:
      - 8500:8500
    networks:
      - ubiquitous
    volumes:
      - consul:/consul/data
    restart: unless-stopped

  fabio:
    image: fabiolb/fabio
    container_name: fabio
    environment:
    - FABIO_REGISTRY_CONSUL_ADDR=consul:8500
    networks:
      - ubiquitous
    ports:
    - 9998:9998
    - 9999:9999
    restart: unless-stopped

  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - 3000:3000
    networks:
      - ubiquitous
    volumes:
      - grafana:/var/lib/grafana

  influxdb:
    image: influxdb
    container_name: influxdb
    ports:
      - '8086:8086'
    networks:
      - ubiquitous
    volumes:
      - influxdb:/var/lib/influxdb

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    ports:
      - '9090:9090'
    networks:
      - ubiquitous
    volumes:
      - prometheus:/prometheus
      - ${RELATIVE_PATH}/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      
  jaeger:
    container_name: jaeger
    image: jaegertracing/all-in-one
    restart: always
    networks:
      - ubiquitous
    ports:
      - "5775:5775/udp"
      - 5778:5778 
      - "6831:6831/udp" 
      - "6832:6832/udp" 
      - 9411:9411 
      - 14268:14268 
      - 16686:16686
    environment:
        - memory.max-traces=75
    deploy:
      resources:
        limits:
          memory: 1G


volumes:
  mongo:
    driver: local
  rabbitmq:
    driver: local
  redis:
    driver: local
  postgres:
    driver: local
  pgadmin:
    driver: local
  consul:
    driver: local
  fabio:
    driver: local
  grafana:
    driver: local
  influxdb:
    driver: local
  prometheus:
    driver: local

networks:
  ubiquitous:
    name: ubiquitous
    external: true