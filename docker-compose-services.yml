version: "3.5"

services:

  u.api-gateway:
    image: u.api-gateway:latest
    container_name: u.api-gateway
    build:
      context: .
      dockerfile: src/ApiGateway/Dockerfile
    ports:
      - 4500:4500
    environment:
      ASPNETCORE_ENVIRONMENT: docker
    volumes:
      - '${RELATIVE_PATH}/apigateway/appsettings.docker.json:/app/appsettings.docker.json:ro'
      - '${RELATIVE_PATH}/apigateway/ocelot.json:/app/ocelot.json:ro'
    restart: unless-stopped
    networks:
      - ubiquitous

  u.product-service:
    image: u.product-service:latest
    container_name: u.product-service
    build:
      context: .
      dockerfile: src/Services/Product/U.ProductService/Dockerfile
    ports:
      - 5000:5000
    environment:
      DbOptions__Connection: Server=postgres;Port=5432;Database=product-service;User Id=postgres;Password=postgres;Integrated Security=true;Pooling=true;
      DbOptions__Type: Npgsql
      ASPNETCORE_URLS: http://+:5000
      ASPNETCORE_ENVIRONMENT: docker
    volumes:
      - '${RELATIVE_PATH}/productservice/appsettings.docker.json:/app/appsettings.docker.json:ro'
    restart: unless-stopped
    networks:
      - ubiquitous

  u.smartstore-adapter:
    image: u.smartstore_adapter:latest
    container_name: u.smartstore-adapter
    build:
      context: .
      dockerfile: src/Adapters/SmartStore/U.SmartStoreAdapter/Dockerfile
    ports:
      - 5100:5100
    environment:
      DbOptions__Connection: Server=postgres;Port=5432;Database=smartstore-adapter;User Id=postgres;Password=postgres;Integrated Security=true;Pooling=true;
      DbOptions__Type: Npgsql
      ASPNETCORE_URLS: http://+:5100
      ASPNETCORE_ENVIRONMENT: docker
    volumes:
      - '${RELATIVE_PATH}/smartstoreadapter/appsettings.docker.json:/app/appsettings.docker.json:ro'
    restart: unless-stopped
    networks:
      - ubiquitous

  u.fetch-service:
    image: u.fetch-service:latest
    container_name: u.fetch-service
    build:
      context: .
      dockerfile: src/Services/Fetch/U.FetchService/Dockerfile
    ports:
      - 5200:5200
    environment:
      DbOptions__Connection: Server=postgres;Port=5432;Database=fetch-service;User Id=postgres;Password=postgres;Integrated Security=true;Pooling=true;
      DbOptions__Type: Npgsql
      IntegrationEventLogConnection: Server=postgres;Port=5432;Database=IntegrationEventLog;User Id=postgres;\nPassword=postgres;Integrated Security=true;Pooling=true;
      ASPNETCORE_URLS: http://+:5200
      ASPNETCORE_ENVIRONMENT: docker
    volumes:
      - '${RELATIVE_PATH}/fetchservice/appsettings.docker.json:/app/appsettings.docker.json:ro'
    depends_on:
      - u.smartstore-adapter
    restart: unless-stopped
    networks:
      - ubiquitous

  u.identity-service:
    image: u.identity-service:latest
    container_name: u.identity-service
    build:
      context: .
      dockerfile: src/Services/Identity/U.IdentityService/Dockerfile
    ports:
      - 5400:5400
    environment:
      ASPNETCORE_URLS: http://+:5400
      ASPNETCORE_ENVIRONMENT: docker
      DbOptions__Connection: Server=postgres;Port=5432;Database=identity-service;User Id=postgres;Password=postgres;
      DbOptions__Type: Npgsql
      DbOptions__AutoMigration: "true"
    volumes:
      - '${RELATIVE_PATH}/identityservice/appsettings.docker.json:/app/appsettings.docker.json:ro'
    restart: unless-stopped
    networks:
      - ubiquitous

  u.notification-service:
    image: u.notification-service:latest
    container_name: u.notification-service
    build:
      context: .
      dockerfile: src/Services/Notification/U.NotificationService/Dockerfile
    ports:
      - 5500:5500
    environment:
      ASPNETCORE_URLS: http://+:5500
      ASPNETCORE_ENVIRONMENT: docker
      DbOptions__Connection: Server=postgres;Port=5432;Database=notification-service;User Id=postgres;Password=postgres;
      DbOptions__Type: Npgsql
      DbOptions__AutoMigration: "true"
    volumes:
      - '${RELATIVE_PATH}/notificationservice/appsettings.docker.json:/app/appsettings.docker.json:ro'
    restart: unless-stopped
    networks:
      - ubiquitous

  u.generator-service:
    image: u.generator-service:latest
    container_name: u.generator-service
    build:
      context: .
      dockerfile: src/Services/Generator/U.GeneratorService/Dockerfile
    ports:
      - 5700:5700
    volumes:
      - '${RELATIVE_PATH}/generatorservice/appsettings.docker.json:/app/appsettings.docker.json:ro'
    environment:
      ASPNETCORE_URLS: http://+:5700
      ASPNETCORE_ENVIRONMENT: docker
    restart: unless-stopped
    networks:
      - ubiquitous

networks:
  ubiquitous:
    name: ubiquitous
    external: true