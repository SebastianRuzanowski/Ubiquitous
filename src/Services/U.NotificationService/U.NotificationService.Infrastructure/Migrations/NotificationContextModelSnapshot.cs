// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using U.NotificationService.Infrastructure.Contexts;

namespace U.NotificationService.Infrastructure.Migrations
{
    [DbContext(typeof(NotificationContext))]
    partial class NotificationContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("U.NotificationService.Domain.Entities.Confirmation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("ConfirmationDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("ConfirmationType")
                        .HasColumnType("integer");

                    b.Property<Guid>("DeviceReceivedId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("NotificationId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("User")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("NotificationId");

                    b.HasIndex("User");

                    b.ToTable("Notification_confirmation","Notifications");
                });

            modelBuilder.Entity("U.NotificationService.Domain.Entities.Notification", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("IntegrationEvent")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("IntegrationEventId")
                        .HasColumnType("uuid");

                    b.Property<int>("IntegrationEventType")
                        .HasColumnType("integer");

                    b.Property<int>("TimesSent")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Notification","Notifications");
                });

            modelBuilder.Entity("U.NotificationService.Domain.Entities.UserBasedEventImportancy", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("Importancy")
                        .HasColumnType("integer");

                    b.Property<Guid?>("NotificationId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("NotificationId");

                    b.ToTable("UserBasedEventImportancy");
                });

            modelBuilder.Entity("U.NotificationService.Domain.Entities.Confirmation", b =>
                {
                    b.HasOne("U.NotificationService.Domain.Entities.Notification", null)
                        .WithMany("Confirmations")
                        .HasForeignKey("NotificationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("U.NotificationService.Domain.Entities.UserBasedEventImportancy", b =>
                {
                    b.HasOne("U.NotificationService.Domain.Entities.Notification", null)
                        .WithMany("Importancies")
                        .HasForeignKey("NotificationId");
                });
#pragma warning restore 612, 618
        }
    }
}
