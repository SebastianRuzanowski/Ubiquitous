<Project Sdk="Microsoft.NET.Sdk.Web">

    <PropertyGroup>
        <TargetFramework>netcoreapp2.2</TargetFramework>
        <TypeScriptCompileBlocked>true</TypeScriptCompileBlocked>
        <TypeScriptToolsVersion>Latest</TypeScriptToolsVersion>
        <IsPackable>false</IsPackable>
        <DefaultItemExcludes>$(DefaultItemExcludes);$(SpaRoot)node_modules\**</DefaultItemExcludes>

        <!-- Set this to true if you enable server-side prerendering -->
        <BuildServerSideRenderer>false</BuildServerSideRenderer>
        <OutputType>Library</OutputType>
    </PropertyGroup>

    <ItemGroup>
        <PackageReference Include="Microsoft.AspNetCore" Version="2.2.0" />
        <PackageReference Include="Microsoft.AspNetCore.HttpsPolicy" Version="2.2.0" />
        <PackageReference Include="Microsoft.AspNetCore.Mvc" Version="2.2.0" />
        <PackageReference Include="Microsoft.AspNetCore.Razor.Design" Version="2.2.0" PrivateAssets="All" />
        <PackageReference Include="Microsoft.AspNetCore.SpaServices" Version="2.2.0" />
        <PackageReference Include="Microsoft.AspNetCore.SpaServices.Extensions" Version="2.2.0" />
        <PackageReference Include="Microsoft.AspNetCore.StaticFiles" Version="2.2.0" />
    </ItemGroup>

    <ItemGroup>
        <!-- Don't publish the SPA source files, but do show them in the project files list -->
        <Content Remove="$(SpaRoot)**" />
        <Content Include="proxy.conf.json" />
        <Content Include="src\app\modules\products\components\products-details\products-details.component.css" />
        <Content Include="src\app\modules\products\components\products.component.css" />
        <None Remove="$(SpaRoot)**" />
        <None Include="$(SpaRoot)**" Exclude="$(SpaRoot)node_modules\**" />
        <None Include="src\app\modules\products\components\products-details\products.component.html" />
        <None Include="src\app\modules\products\components\products.component.html" />
        <None Include="src\app\modules\products\components\products.component.ts" />
    </ItemGroup>

    <ItemGroup>
      <_ContentIncludedByDefault Remove="Pages\Error.cshtml" />
      <_ContentIncludedByDefault Remove="Pages\_ViewImports.cshtml" />
      <_ContentIncludedByDefault Remove="wwwroot\favicon.ico" />
      <_ContentIncludedByDefault Remove="src\tsconfig.app.json" />
      <_ContentIncludedByDefault Remove="src\tsconfig.server.json" />
      <_ContentIncludedByDefault Remove="src\tsconfig.spec.json" />
      <_ContentIncludedByDefault Remove="src\tslint.json" />
    </ItemGroup>

    <ItemGroup>
      <_ResolveComReferenceCache Remove="obj\Debug\netcoreapp2.2\U.WebApp.Angular.csproj.ResolveComReference.cache" />
    </ItemGroup>

    <ItemGroup>
      <IntermediateAssembly Remove="obj\Debug\netcoreapp2.2\U.WebApp.Angular.dll" />
    </ItemGroup>

    <ItemGroup>
      <_DebugSymbolsIntermediatePath Remove="obj\Debug\netcoreapp2.2\U.WebApp.Angular.pdb" />
    </ItemGroup>

    <ItemGroup>
      <_DeploymentManifestEntryPoint Remove="obj\Debug\netcoreapp2.2\U.WebApp.Angular.dll" />
    </ItemGroup>

    <ItemGroup>
      <ApplicationManifest Remove="obj\Debug\netcoreapp2.2\Native.U.WebApp.Angular.manifest" />
    </ItemGroup>

    <ItemGroup>
      <DeployManifest Remove="obj\Debug\netcoreapp2.2\U.WebApp.Angular.application" />
    </ItemGroup>

    <ItemGroup>
      <_OutputPathItem Remove="bin\Debug\netcoreapp2.2\" />
    </ItemGroup>

    <ItemGroup>
      <AppConfigFileDestination Remove="bin\Debug\netcoreapp2.2\U.WebApp.Angular.dll.config" />
    </ItemGroup>

    <ItemGroup>
      <_DebugSymbolsOutputPath Remove="bin\Debug\netcoreapp2.2\U.WebApp.Angular.pdb" />
    </ItemGroup>

    <ItemGroup>
      <_ApplicationManifestFinal Remove="bin\Debug\netcoreapp2.2\Native.U.WebApp.Angular.manifest" />
    </ItemGroup>

    <ItemGroup>
      <TypeScriptCompile Include="src\app\guid.ts" />
      <TypeScriptCompile Include="src\app\modules\products\product.module.ts" />
      <TypeScriptCompile Include="src\app\modules\shared\models\configuration.model.ts" />
      <TypeScriptCompile Include="src\app\modules\shared\models\paginateditems.model.ts" />
      <TypeScriptCompile Include="src\app\modules\shared\services\data.service.ts" />
      <TypeScriptCompile Include="src\app\modules\shared\shared.module.ts" />
    </ItemGroup>

    <Target Name="PublishRunWebpack" AfterTargets="ComputeFilesToPublish">
        <!-- As part of publishing, ensure the JS resources are freshly built in production mode -->
        <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
        <Exec WorkingDirectory="$(SpaRoot)" Command="npm run build -- --prod" />
        <Exec WorkingDirectory="$(SpaRoot)" Command="npm run build:ssr -- --prod" Condition=" '$(BuildServerSideRenderer)' == 'true' " />

        <!-- Include the newly-built files in the publish output -->
        <ItemGroup>
            <DistFiles Include="$(SpaRoot)dist\**; $(SpaRoot)dist-server\**" />
            <DistFiles Include="$(SpaRoot)node_modules\**" Condition="'$(BuildServerSideRenderer)' == 'true'" />
            <ResolvedFileToPublish Include="@(DistFiles->'%(FullPath)')" Exclude="@(ResolvedFileToPublish)">
                <RelativePath>%(DistFiles.Identity)</RelativePath>
                <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
            </ResolvedFileToPublish>
        </ItemGroup>
    </Target>

</Project>
